# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: TransitNE
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
      
  dotnet_tests:
    name: Unit Testing
    runs-on: ubuntu-latest
       
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --no-restore

      - name: Start Application
        run: dotnet run --project ./TransitNE/TransitNE.csproj --urls=http://localhost:5000 &
        # The '&' runs it in the background.
         
      - name: Wait for app to start
        run: |
          sleep 5
          # Optionally, you can do curl checks to ensure the app is up
      
      - name: Run  Tests
        run: dotnet test /p:CollectCoverage=true /p:CoverletOutput=./coverage/
   
  js_test:
    runs-on: ubuntu-latest
    needs: dotnet_tests
    steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '22' 

        - name: Install npm dependencies
          run: npm install

        - name: Run JaveScript unit Tests (Jest)
          run: npm test
